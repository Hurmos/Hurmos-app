CREATE TABLE Match_players (
  player_id INT64 NOT NULL,
  match_id INT64 NOT NULL,
  team_number INT64 NOT NULL,
  status_coming BOOL NOT NULL DEFAULT (FALSE),
  rating_friendliness INT64 DEFAULT (5),
) PRIMARY KEY(player_id, match_id);

CREATE TABLE Match_statuses (
  id INT64 NOT NULL,
  delay_amount INT64 DEFAULT (0),
  has_ended BOOL DEFAULT (FALSE),
) PRIMARY KEY(id);

CREATE TABLE Matches (
  id INT64 NOT NULL,
  start_time TIMESTAMP NOT NULL,
  end_time TIMESTAMP NOT NULL,
  player_number INT64 NOT NULL DEFAULT (0),
  winner_team INT64,
  sport_id INT64 NOT NULL,
  match_status_id INT64 NOT NULL,
  FOREIGN KEY(match_status_id) REFERENCES Match_statuses(id),
) PRIMARY KEY(id);

ALTER TABLE Match_players ADD FOREIGN KEY(match_id) REFERENCES Matches(id);

CREATE TABLE Passwords (
  id INT64 NOT NULL,
  accesstoken_google STRING(MAX),
) PRIMARY KEY(id);

CREATE TABLE Player_profiles (
  id INT64 NOT NULL,
  skill_range INT64 NOT NULL,
) PRIMARY KEY(id);

ALTER TABLE Match_players ADD FOREIGN KEY(player_id) REFERENCES Player_profiles(id);

CREATE TABLE Player_skills (
  player_id INT64 NOT NULL,
  sport_id INT64 NOT NULL,
  skill_level INT64 NOT NULL,
  FOREIGN KEY(player_id) REFERENCES Player_profiles(id),
) PRIMARY KEY(player_id, sport_id);

CREATE TABLE Sports (
  id INT64 NOT NULL,
  team_amount INT64 NOT NULL,
  team_size INT64 NOT NULL,
) PRIMARY KEY(id);

ALTER TABLE Matches ADD FOREIGN KEY(sport_id) REFERENCES Sports(id);

ALTER TABLE Player_skills ADD FOREIGN KEY(sport_id) REFERENCES Sports(id);

CREATE TABLE Users (
  id INT64 NOT NULL,
  email STRING(MAX),
  home_location JSON,
  created_at TIMESTAMP,
  password_id INT64 NOT NULL,
  FOREIGN KEY(password_id) REFERENCES Passwords(id),
) PRIMARY KEY(id);

-- CREATE TABLE ResourceOwners (
--     owner_id NUMERIC NOT NULL,
--     user_id NUMERIC NOT NULL,
--     business_name STRING(MAX),
--     FOREIGN KEY (user_id) REFERENCES Users(user_id)
-- ) PRIMARY KEY(owner_id);

-- CREATE TABLE SportResources (
--     resource_id NUMERIC NOT NULL,
--     owner_id NUMERIC NOT NULL,
--     name STRING(MAX) NOT NULL,
--     location STRING(MAX),
--     price STRING(MAX),
--     -- Other resource-related information fields here
--     FOREIGN KEY (owner_id) REFERENCES ResourceOwners(owner_id)
-- ) PRIMARY KEY(resource_id)


-- Create Reservations Table

-- CREATE TABLE Reservations (
--     reservation_id NUMERIC NOT NULL,
--     resource_id NUMERIC NOT NULL,
--     player_id NUMERIC NOT NULL,
--     reservation_datetime DATETIME NOT NULL,
--     billing_amount NUMERIC NOT NULL,
--     payment_status STRING(MAX) NOT NULL,
--     -- Other reservation-related information fields here
--     FOREIGN KEY (resource_id) REFERENCES SportResources(resource_id),
--     FOREIGN KEY (player_id) REFERENCES Users(user_id)
-- ) PRIMARY KEY(reservation_id)

-- Create Matchmaking Queue Table

-- -- Create Billing History Table
-- CREATE TABLE BillingHistory (
--     billing_id NUMERIC NOT NULL,
--     transaction_datetime DATETIME NOT NULL,
--     transaction_type NUMERIC,
--     -- Other billing-related information fields here
--     FOREIGN KEY (user_id) REFERENCES Users(user_id),
--     FOREIGN KEY (match_player_id) REFERENCES MatchPlayers(match_player_id),
--     FOREIGN KEY (fee_id) REFERENCES MatchmakingFee(fee_id)
-- ) PRIMARY KEY(billing_id)

-- Create Matchmaking Fee Table
-- CREATE TABLE MatchmakingFee (
--     fee_id NUMERIC NOT NULL,
--     percentage_fee NUMERIC NOT NULL,
--     FOREIGN KEY(sport_id) REFERENCES Sports(sport_id)
-- ) PRIMARY KEY(fee_id)

-- Create Sport Resource Inventory Table
-- CREATE TABLE SportResourceInventory (
--     inventory_id NUMERIC NOT NULL,
--     sport_selection VARCHAR(255),
--     equipment_available BOOLEAN,
--     shower_facility BOOLEAN,
--     FOREIGN KEY (resource_id) REFERENCES SportResources(resource_id)
-- ) PRIMARY KEY(inventory_id)

    -- preferred_area STRING,

-- This might not be necessary, because we have the information already available in the matchmaking queue table. 
-- CREATE TABLE MatchmakingPreferences (
--     preference_id NUMERIC NOT NULL,
--     FOREIGN KEY (profile_id) REFERENCES PlayerProfile(profile_id)
--     FOREIGN KEY (sport_id) REFERENCES Sports(sport_id)
-- )     